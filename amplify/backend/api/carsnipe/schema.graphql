type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  nickname: String
  money: Int
  cars: [Car] @manyToMany(relationName: "UserCar")
  auctions: [Auction] @manyToMany(relationName: "AuctionUser")
  email: String
  bidded: [BidInfo]
  avatar: String
  bio: String
  achievements: [Achievement]
  sentMessages: [Message] @hasMany(indexName: "bySender", fields: ["id"])
  receivedMessages: [Message] @hasMany(indexName: "byReceiver", fields: ["id"])
  conversations: [Conversation] @manyToMany(relationName: "UserConversation")
}

type Achievement {
  name: String!
  date: String!
}

type Auction @model @auth(rules: [{allow: public, operations: [read, create, update]}]) {
  id: ID!
  make: String!
  model: String!
  year: Int
  carId: String
  currentBid: Int
  endTime: String!
  status: String!
  lastBidPlayer: String
  player: String!
  buy: Int!
  minBid: Int!
  type: String!
  user: [User] @manyToMany(relationName: "AuctionUser")
}

type BidInfo {
  auctionId: ID!
  bidValue: Int!
}

type Car @model @auth(rules: [{allow: public}]) {
  id: ID!
  make: String!
  model: String!
  year: Int!
  price: Int!
  type: String
  users: [User] @manyToMany(relationName: "UserCar")
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String!
  senderId: ID! @index(name: "bySender")
  receiverId: ID! @index(name: "byReceiver")
  timestamp: AWSDateTime!
  conversation: Conversation @belongsTo(fields: ["conversationMessagesId"])
  conversationMessagesId: ID! @index(name: "byConversation")
}

type Conversation @model @auth(rules: [{allow: public}]) {
  id: ID!
  participants: [User] @manyToMany(relationName: "UserConversation")
  messages: [Message] @hasMany
  lastMessageTimestamp: AWSDateTime
}
