type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  nickname: String
  money: Int
  cars: [Car] @manyToMany(relationName: "UserCar")
  auctions: [Auction] @manyToMany(relationName: "AuctionUser")
  email: String
  bidded: [BidInfo]
  avatar: String
  bio: String
  achievements: [Achievement]
  sold: [ID]
  totalCarsOwned: Int
  totalAuctionsParticipated: Int
  totalBidsPlaced: Int
  totalSpent: Int
  totalAuctionsWon: Int
  totalProfitEarned: Int
}

type Car @model @auth(rules: [{allow: public}]) {
  id: ID!
  make: String!
  model: String!
  year: Int!
  price: Int!
  type: String
  purchasePrice: Int
  sellPrice: Int
  inAuction: Boolean # New field to track if a car is in an auction
  users: [User] @manyToMany(relationName: "UserCar")
}

type Achievement {
  name: String!
  date: String!
}

type Auction @model @auth(rules: [{allow: public, operations: [read, create, update]}]) {
  id: ID!
  make: String!
  model: String!
  year: Int
  carId: String
  currentBid: Int
  endTime: String!
  status: String!
  lastBidPlayer: String
  player: String!
  buy: Int!
  minBid: Int!
  type: String!
  user: [User] @manyToMany(relationName: "AuctionUser")
  bidsCount: Int
}

type BidInfo {
  auctionId: ID!
  bidValue: Int!
  timestamp: String
}